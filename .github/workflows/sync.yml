name: pronote-to-family-mo

on:
  workflow_dispatch:
  schedule:
    - cron: "7 4 * * 1-5"   # chaque jour ouvré à 04:07 UTC (ajuste si tu veux)

jobs:
  sync:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        runner: [self-hosted]   # mets ["windows-latest"] si tu veux tester sur runner GitHub
    env:
      ENT_URL: ${{ vars.ENT_URL }}          # ou mets une valeur littérale ici
      PRONOTE_URL: ${{ vars.PRONOTE_URL }}  # idem
      PRONOTE_USER: ${{ secrets.PRONOTE_USER }}
      PRONOTE_PASS: ${{ secrets.PRONOTE_PASS }}
      CAL_ID: family
      WEEKS: "4"
      HEADFUL: "0"                          # passe "1" pour débug
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Ensure pip (Windows peculiarity)
        shell: bash
        run: |
          python -m ensurepip --upgrade || true
          python -m pip install -U pip

      - name: Recreate OAuth files from secrets
        shell: bash
        run: |
          printf '%s' "${{ secrets.GCAL_CLIENT_SECRET }}" > credentials.json
          printf '%s' "${{ secrets.GCAL_TOKEN_JSON }}"  > token.json

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade \
            playwright \
            google-api-python-client \
            google-auth-httplib2 \
            google-auth-oauthlib \
            python-dateutil
          python -m playwright install --with-deps chromium

      - name: Installer Chromium (Playwright)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          python -m playwright install chromium

      - name: Debug – IP publique (utile si PRONOTE bloque par IP)
        shell: pwsh
        run: |
          try {
            $ip = (Invoke-RestMethod 'https://api.ipify.org?format=json').ip
            Write-Host "IP publique du job: $ip"
          } catch { Write-Host "Impossible de récupérer l'IP publique: $($_.Exception.Message)" }

      - name: Lancer la synchro Playwright -> Google Calendar
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path screenshots | Out-Null
          & "$env:pythonLocation\python.exe" .\pronote_playwright_to_family_mo.py

      - name: Upload screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: screenshots/*
          retention-days: 5
